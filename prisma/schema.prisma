// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
}

model Project {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String      @db.ObjectId
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  flows       Flow[]
  tokens      Token[]
}

model Token {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  type        String      // SSN, PIN, AccountNumber, etc.
  description String?
  format      String?     // regex or other validation format
  projectId   String      @db.ObjectId
  project     Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  nodes       Node[]      // Nodes that use this token
}

model Flow {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  projectId   String      @db.ObjectId
  project     Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  nodes       Node[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Node {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  type            String    // prompt, collect, validate, branch, end
  title           String
  prompt          String?
  position        Json      // x, y coordinates for the flow designer
  flowId          String    @db.ObjectId
  flow            Flow      @relation(fields: [flowId], references: [id], onDelete: Cascade)
  tokenId         String?   @db.ObjectId
  token           Token?    @relation(fields: [tokenId], references: [id])
  validationRules Json?     // Custom validation rules
  nextNodeIds     String[]  @db.ObjectId // IDs of the next nodes
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}
